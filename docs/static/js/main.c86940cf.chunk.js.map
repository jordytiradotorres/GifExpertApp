{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAgB1C,OACC,0BAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAKCI,MAAMF,GALP,cAKhBG,EALgB,gBAMCA,EAASC,OANV,uBAMdC,EANc,EAMdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZb,kBAgBfM,GAhBe,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,4BAAQc,UAAU,0CACjB,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCsBQO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDP,SAACA,GAAc,IAAD,EACdd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAH8B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OACtBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGT,CAACpB,IAEGqB,EDbmBK,CAAY1B,GAA9BO,EADyB,EACzBA,KAAMa,EADmB,EACnBA,QAId,OAFAO,QAAQC,IAAIrB,EAAMa,GAGjB,oCACC,wBAAIJ,UAAU,wDACZhB,GAGDoB,GACA,uBAAGJ,UAAU,oCAAb,eAGD,yBAAKA,UAAU,aACbT,EAAKE,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eAAamB,IAAKnB,EAAIC,IAAQD,UEFpBoB,EAfM,WAAO,IAAD,EACU5C,mBAAS,CAAC,gBADpB,mBACnB6C,EADmB,KACP9C,EADO,KAG1B,OACC,yBAAK+B,UAAU,aACd,4CACA,kBAAC,EAAD,CAAa/B,cAAeA,IAE3B8C,EAAWtB,KAAI,SAACT,GAAD,OACf,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,S,MCRtCgC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.c86940cf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\r\n\t\t\tsetInputValue(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=ao1i5oHFn8rXfwjs31EOteufucdLkWi7`;\r\n\r\n\tconst response = await fetch(url);\r\n\tconst { data } = await response.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<figure className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</figure>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGif } from \"./../hooks/useFetchGif\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data, loading } = useFetchGif(category);\r\n\r\n\tconsole.log(data, loading);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeInDown  titleCategory\">\r\n\t\t\t\t{category}\r\n\t\t\t</h3>\r\n\r\n\t\t\t{loading && (\r\n\t\t\t\t<p className=\"animate__animated animate__flash\">Cargando...</p>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{data.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"./../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) =>\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t})\r\n\t\t);\r\n\t}, [category]);\r\n\r\n\treturn state; // data, loading\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t{categories.map((category) => (\r\n\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}